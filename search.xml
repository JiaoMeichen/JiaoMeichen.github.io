<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[移动端上拉加载下拉刷新]]></title>
    <url>%2F2017%2F12%2F15%2F%E7%A7%BB%E5%8A%A8%E7%AB%AF%E4%B8%8A%E6%8B%89%E5%8A%A0%E8%BD%BD%E4%B8%8B%E6%8B%89%E5%88%B7%E6%96%B0%2F</url>
    <content type="text"><![CDATA[基于手机端的上拉加载下拉刷新 html 12345678&lt;div id="wrapper"&gt; &lt;ul&gt; &lt;/ul&gt;&lt;/div&gt;&lt;script src="iscroll.js"&gt;&lt;/script&gt;&lt;script src="pullToRefresh.js"&gt;&lt;/script&gt;&lt;script src="index.js"&gt;&lt;/script&gt; css 1234567891011121314#wrapper&#123;position:absolute;top:50px;bottom:0;z-index:1;width:100%&#125;/*外层元素*/.scroller&#123;position:absolute;z-index:1;padding:0;width:100%;-webkit-tap-highlight-color:transparent&#125;/*自己生成*/.scroller li&#123;min-height:70px;font-size:14px&#125;.pullDown,.pullUp&#123;height:40px;color:#888;text-align:center;font-size:12px;line-height:40px&#125;.pullUp&#123;display:block&#125;/*上拉下拉样式*/.loader&#123;display:inline-block;display:none;padding:0;font-size:0&#125;/*加载中的四个小点*/.loader span&#123;display:inline-block;margin:0 2px;width:10px;height:10px;border-radius:100%;vertical-align:middle;-webkit-animation:loader .8s linear infinite alternate;animation:loader .8s linear infinite alternate&#125;.loader span:nth-child(1)&#123;background:rgba(245,103,115,.6);-webkit-animation-delay:-1s;animation-delay:-1s&#125;.loader span:nth-child(2)&#123;background:rgba(245,103,115,.8);-webkit-animation-delay:-.8s;animation-delay:-.8s&#125;.loader span:nth-child(3)&#123;background:rgba(245,103,115,1);-webkit-animation-delay:-.26666s;animation-delay:-.26666s&#125;.loader span:nth-child(4)&#123;background:rgba(245,103,115,.8);-webkit-animation-delay:-.8s;animation-delay:-.8s&#125;.loader span:nth-child(5)&#123;background:rgba(245,103,115,.4);-webkit-animation-delay:-1s;animation-delay:-1s&#125;@keyframes loader&#123;from&#123;transform:scale(0,0)&#125;to&#123;transform:scale(1,1)&#125;&#125;/*动画*/@-webkit-keyframes loader&#123;from&#123;-webkit-transform:scale(0,0)&#125;to&#123;-webkit-transform:scale(1,1)&#125;&#125; index.js 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859function exchange(pageSize, pageNum, maxVirtualCoin, minVirtualCoin) &#123; $.ajax(&#123; type: "post", url: "url", data: &#123;pageSize: pageSize,pageNum: pageNum,maxVirtualCoin: maxVirtualCoin,minVirtualCoin: minVirtualCoin&#125;, beforeSend: function(request) &#123; request.setRequestHeader("userId","6a025914-772e-4cba-9af5-4a6ab1fbfb8e");&#125;, async: false, success: function(result) &#123; var res = JSON.parse(result); if(res.result == 1) &#123; var str = ""; if((res.data==null &amp;&amp; pageNum==1) ||(res.data.length==0 &amp;&amp; pageNum==1))&#123;-----data为空数组时//***************************if(!res.data &amp;&amp; pageNum==1) ----------返回数据data不存在时 mui.toast("暂无更多数据~") $(".pullUpLabel").html("") $("#exchange_buyList").html(""); &#125;else if( res.data.length == 0 &amp;&amp; pageNum !=1)&#123;//**************************&#125; else if(!res.data &amp;&amp; pageNum != 1) &#123; $(".pullUpLabel").html("已全部加载~") console.log($(".pullUpLabel").html()) mui.toast("已全部加载~") &#125;else&#123; for(var i = 0; i &lt; res.data.length; i++) &#123; str += "字符串拼接"; &#125; if(pageNum == 1)&#123; $("#exchange_buyList").html(str); &#125;else &#123; $("#exchange_buyList").append(str); &#125; &#125; &#125; else &#123; mui.toast("已经全部加载啦~") &#125; &#125;, error: function() &#123; mui.toast("error") &#125; &#125;);&#125;refresher.init(&#123; id: "wrapper",//外层元素 pullDownAction: Refresh,//执行刷新函数 pullUpAction: Load//执行加载函数&#125;);function Refresh() &#123; setTimeout(function() &#123; // &lt;-- 模拟网络拥塞，从生产清除setTimeout！ pageNum = 1; exchange(pageSize, pageNum, maxVirtualCoin, minVirtualCoin);//ajax函数 wrapper.refresh(); //记得刷新后，动作完成！ &#125;, 1000);&#125;function Load() &#123; setTimeout(function() &#123; // &lt;-- 模拟网络拥塞，从生产清除setTimeout！ pageNum += 1; exchange(pageSize, pageNum, maxVirtualCoin, minVirtualCoin);//ajax函数 wrapper.refresh(); //记得刷新后，动作完成！ &#125;, 1000);&#125; pullToRefresh.js 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111var refresher = &#123; info: &#123; "pullDownLable": "下拉刷新...", "pullingDownLable": "释放刷新...", "pullUpLable": "上拉加载更多...", "pullingUpLable": "释放加载...", "loadingLable": "拼命加载中..." &#125;, init: function(parameter) &#123; var wrapper = document.getElementById(parameter.id); var div = document.createElement("div"); div.className = "scroller"; wrapper.appendChild(div); var scroller = wrapper.querySelector(".scroller"); var list = wrapper.querySelector("#" + parameter.id + " ul"); scroller.insertBefore(list, scroller.childNodes[0]); var pullDown = document.createElement("div"); pullDown.className = "pullDown"; var loader = document.createElement("div"); loader.className = "loader"; for (var i = 0; i &lt; 4; i++) &#123; var span = document.createElement("span"); loader.appendChild(span); &#125; pullDown.appendChild(loader); var pullDownLabel = document.createElement("div"); pullDownLabel.className = "pullDownLabel"; pullDown.appendChild(pullDownLabel); scroller.insertBefore(pullDown, scroller.childNodes[0]); var pullUp = document.createElement("div"); pullUp.className = "pullUp"; var loader = document.createElement("div"); loader.className = "loader"; for (var i = 0; i &lt; 4; i++) &#123; var span = document.createElement("span"); loader.appendChild(span); &#125; pullUp.appendChild(loader); var pullUpLabel = document.createElement("div"); pullUpLabel.className = "pullUpLabel"; var content = document.createTextNode(refresher.info.pullUpLable); pullUpLabel.appendChild(content); pullUp.appendChild(pullUpLabel); scroller.appendChild(pullUp); var pullDownEl = wrapper.querySelector(".pullDown"); var pullDownOffset = pullDownEl.offsetHeight; var pullUpEl = wrapper.querySelector(".pullUp"); var pullUpOffset = pullUpEl.offsetHeight; this.scrollIt(parameter, pullDownEl, pullDownOffset, pullUpEl, pullUpOffset); &#125;, scrollIt: function(parameter, pullDownEl, pullDownOffset, pullUpEl, pullUpOffset) &#123; eval(parameter.id + "= new iScroll(parameter.id, &#123;useTransition: true,vScrollbar: false,topOffset: pullDownOffset,onRefresh: function () &#123;refresher.onRelease(pullDownEl,pullUpEl);&#125;,onScrollMove: function () &#123;refresher.onScrolling(this,pullDownEl,pullUpEl,pullUpOffset);&#125;,onScrollEnd: function () &#123;refresher.onPulling(pullDownEl,parameter.pullDownAction,pullUpEl,parameter.pullUpAction);&#125;,&#125;)"); pullDownEl.querySelector('.pullDownLabel').innerHTML = refresher.info.pullDownLable; document.addEventListener('touchmove', function(e) &#123; e.preventDefault(); &#125;, false); &#125;, onScrolling: function(e, pullDownEl, pullUpEl, pullUpOffset) &#123; if (e.y &gt; -(pullUpOffset)) &#123; pullDownEl.id = ''; pullDownEl.querySelector('.pullDownLabel').innerHTML = refresher.info.pullDownLable; e.minScrollY = -pullUpOffset; &#125; if (e.y &gt; 0) &#123; pullDownEl.classList.add("flip"); pullDownEl.querySelector('.pullDownLabel').innerHTML = refresher.info.pullingDownLable; e.minScrollY = 0; &#125; if (e.scrollerH &lt; e.wrapperH &amp;&amp; e.y &lt; (e.minScrollY - pullUpOffset) || e.scrollerH &gt; e.wrapperH &amp;&amp; e.y &lt; (e.maxScrollY - pullUpOffset)) &#123; pullUpEl.style.display = "block"; pullUpEl.classList.add("flip"); pullUpEl.querySelector('.pullUpLabel').innerHTML = refresher.info.pullingUpLable; &#125; if (e.scrollerH &lt; e.wrapperH &amp;&amp; e.y &gt; (e.minScrollY - pullUpOffset) &amp;&amp; pullUpEl.id.match('flip') || e.scrollerH &gt; e.wrapperH &amp;&amp; e.y &gt; (e.maxScrollY - pullUpOffset) &amp;&amp; pullUpEl.id.match('flip')) &#123; pullDownEl.classList.remove("flip"); pullUpEl.querySelector('.pullUpLabel').innerHTML = refresher.info.pullUpLable; &#125; &#125;, onRelease: function(pullDownEl, pullUpEl) &#123; if (pullDownEl.className.match('loading')) &#123; pullDownEl.classList.toggle("loading"); pullDownEl.querySelector('.pullDownLabel').innerHTML = refresher.info.pullDownLable; pullDownEl.querySelector('.loader').style.display = "none" pullDownEl.style.lineHeight = pullDownEl.offsetHeight + "px"; &#125; if (pullUpEl.className.match('loading')) &#123; pullUpEl.classList.toggle("loading"); pullUpEl.querySelector('.pullUpLabel').innerHTML = refresher.info.pullUpLable; pullUpEl.querySelector('.loader').style.display = "none" pullUpEl.style.lineHeight = pullUpEl.offsetHeight + "px"; &#125; &#125;, onPulling: function(pullDownEl, pullDownAction, pullUpEl, pullUpAction) &#123; if (pullDownEl.className.match('flip') /*&amp;&amp;!pullUpEl.className.match('loading')*/ ) &#123; pullDownEl.classList.add("loading"); pullDownEl.classList.remove("flip"); pullDownEl.querySelector('.pullDownLabel').innerHTML = refresher.info.loadingLable; pullDownEl.querySelector('.loader').style.display = "block" pullDownEl.style.lineHeight = "20px"; if (pullDownAction) pullDownAction(); &#125; if (pullUpEl.className.match('flip') /*&amp;&amp;!pullDownEl.className.match('loading')*/ ) &#123; pullUpEl.classList.add("loading"); pullUpEl.classList.remove("flip"); pullUpEl.querySelector('.pullUpLabel').innerHTML = refresher.info.loadingLable; pullUpEl.querySelector('.loader').style.display = "block" pullUpEl.style.lineHeight = "20px"; if (pullUpAction) pullUpAction(); &#125; &#125;&#125;]]></content>
      <categories>
        <category>常用插件</category>
      </categories>
      <tags>
        <tag>插件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[居中总结]]></title>
    <url>%2F2017%2F12%2F15%2F%E5%B1%85%E4%B8%AD%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[常见方式的居中总结 单行省略、多行省略123456789101. width:100px; overflow: hidden; text-overflow:ellipsis; white-space: nowrap;2. width:200px; overflow: hidden; text-overflow:ellipsis; display: -webkit-box; -webkit-line-clamp: 3; -webkit-box-orient: vertical; 图标和文字的绝对对齐 无浮动的图片居中1vertical-align属性是不适用于块元素的，只适用于内联元素。但是我们可以使用display属性，设置其值为table-cell，将块元素转化为单元格，然后再使用vertical-align属性。 单选框与文字的对齐123元素相对于基线向下偏移量像素，用来修复单选框/复选框与12px文字大小不对齐的问题&lt;input type="checkbox" id="one"/&gt;&lt;label for=""&gt;男&lt;/label&gt;input&#123;vertical-align:-2px;&#125; 两段文字居中 如果要做两个元素绝对对齐，可以优先考虑display:table;(父级) display: table-cell;(子级)，这两个真可以算是最佳搭配，而且屡试不爽。vertical-align: middle;只在display:inline行内元素起作用。 弹性盒子居中12父元素：display：flex;justify-content:center;align-items:center;子元素：居中 12父元素：display：flex;子元素：margin：auto; 定位方式居中123父元素：position：relative子元素：position：absolute;left：50%;top：50%;margin-left：-（元素/2）;margin-top：-（高/2）;子元素：position：absolute;left：50%;top：50%;transform:translate(-50%,-50%) 利用vertical-align实现div中img垂直居中123456789css:div&#123; height:200px;background:#eee;vertical-align:middle;&#125;img&#123; height:40px;vertical-align:middle;&#125;span&#123;height:100%;display:inline-block;vertical-align:middle; &#125; html:&lt;div&gt; &lt;span&gt;&lt;/span&gt; ![](http://upload-images.jianshu.io/upload_images/3859151-18ffe916f802564f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)&lt;/div&gt;]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[常见效果实现]]></title>
    <url>%2F2017%2F12%2F15%2F%E5%B8%B8%E8%A7%81%E6%95%88%E6%9E%9C%E5%AE%9E%E7%8E%B0%2F</url>
    <content type="text"><![CDATA[工作中常用效果实现 TAB切换—JQuery+JavaScript1234567891011121314151617181920212223242526272829303132html: &lt;b id="box"&gt; &lt;div class="active"&gt;11111111111111111111111111111111111&lt;/div&gt; &lt;div&gt;22222222222222222222222222222222222&lt;/div&gt; &lt;div&gt;33333333333333333333333333333333333&lt;/div&gt; &lt;/b&gt; &lt;ul&gt; &lt;li&gt;111&lt;/li&gt; &lt;li&gt;222&lt;/li&gt; &lt;li&gt;333&lt;/li&gt; &lt;/ul&gt;css: li&#123; cursor: pointer; &#125; b div&#123;display: none; &#125; .active&#123; display: block; &#125;js: $("ul li").click(function () &#123; var index = $(this).index(); $("b div").eq(index).addClass("active").siblings().removeClass("active"); &#125;)jq: var oLi = document.getElementsByTagName("li"); var oDiv = document.getElementsByTagName("div"); for (var i = 0;i &lt; oLi.length;i++) &#123; oLi[i].index=i; oLi[i].onclick = function()&#123; for (var j = 0;j &lt; oDiv.length;j++) &#123; oDiv[j].className=""; &#125; oDiv[this.index].className = "active"; &#125; &#125; 发送验证码倒计时1234567891011121314151617181920使用方法：time($("input"))/* 倒计时函数 */var wait = 60, timer;function time(o) &#123; if(wait == 0) &#123; o.removeAttr("disabled"); o.css("backgroundColor", "rgba(34,211,162,1)"); o.val("获取验证码"); wait = 60; &#125; else &#123; o.attr("disabled", true); o.css("backgroundColor", "rgba(34,211,162,0.7)"); o.val("重新获取(" + wait + "s)"); wait--; timer = setTimeout(function() &#123; time(o) &#125;, 1000) &#125;&#125; 横向滚动1234html：ul li 标签css：ul &#123;width: 100%;height: 100%;overflow: auto;white-space: nowrap;float: left;font-size: 0;&#125;ul li &#123;display: inline-block;margin-right: 10px;width: 100px;height: 100px;border: 1px solid red;&#125; 居中总结123456789101112131415使用方法：fun.pop($("元素"))var fun = &#123; pop: function(obj) &#123; obj.css("display", "block"); //obj.fadeIn() $("#maskBlack").css("display", "block"); _width = window.innerWidth; _height = window.innerHeight; console.log(_width + " " + _height) var _x = (_width - parseInt(obj.width())) / 2; var _y = (_height - parseInt(obj.height())) / 2; obj.css("top", _y + "px"); obj.css("left", _x + "px"); $("html,body").addClass("lock-body") &#125;&#125;; 全选功能1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950&lt;!doctype html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;jquery实现全选非全选&lt;/title&gt; &lt;script src="http://libs.baidu.com/jquery/1.11.3/jquery.min.js"&gt;&lt;/script&gt; &lt;style&gt; input &#123;vertical-align: middle&#125; .container &#123;width: 500px;margin: 20px auto;&#125; &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div class="container"&gt; &lt;div class="top"&gt; &lt;input type="checkbox" value="全选" id="all" class="all" /&gt; &lt;label for="all"&gt;全选&lt;/label&gt; &lt;/div&gt; &lt;div class="down"&gt; &lt;div class="con"&gt; &lt;input type="checkbox" id="sel1" class="sel sel1" /&gt; &lt;label&gt;选项1&lt;/label&gt; &lt;/div&gt; &lt;div class="con"&gt; &lt;input type="checkbox" id="sel2" class="sel sel2" /&gt; &lt;label&gt;选项2&lt;/label&gt; &lt;/div&gt; &lt;div class="con"&gt; &lt;input type="checkbox" id="sel3" class="sel sel3" /&gt; &lt;label&gt;选项3&lt;/label&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;script&gt; $(".all").on("click",function() &#123; $(".sel").prop("checked", $(this).prop("checked")); &#125;); $(".sel").on("click",function() &#123; var $sel = $(".sel"); var b = true; for(var i = 0; i &lt; $sel.length; i++) &#123; if($sel[i].checked == false) &#123; b = false; break; &#125; &#125; $(".all").prop("checked", b); &#125;) &lt;/script&gt; &lt;/body&gt;&lt;/html&gt; 一键复制123456789101112131、引入clipboard.min.js2、&lt;button class=&quot;copyBtn&quot; data-clipboard-text=&quot;&quot; data-clipboard-action=&quot;copy&quot;&gt;点击复制&lt;/button&gt;3、$(&quot;button&quot;).attr(&quot;data-clipboard-text&quot;, &quot;jiaomeichen.github.io&quot;); var clipboard = new Clipboard(&apos;.copyBtn&apos;); clipboard.on(&apos;success&apos;, function(e) &#123; layer.msg(&quot;已复制成功&quot; + e.text); &#125;); clipboard.on(&apos;error&apos;, function(e) &#123; layer.open(&#123; title: &apos;提示&apos;, content: &apos;您的浏览器可能不支持，请手动复制~&apos; &#125;); &#125;); 设置共用rem1234567891011121314151617181920使用方法：width:4rem;max-width:100%;说明：此方法设置了最大宽度为600px /*rem*/(function(doc, win) &#123; var docEl = doc.documentElement, resizeEvt = 'orientationchange' in window ? 'orientationchange' : 'resize', recalc = function() &#123; var clientWidth = docEl.clientWidth; if(!clientWidth) return; // docEl.style.fontSize = 100 * (clientWidth / 360) + 'px'; if(clientWidth &gt;= 600) &#123; docEl.style.fontSize = '150px'; &#125; else &#123; docEl.style.fontSize = 100 * (clientWidth / 360) + 'px'; &#125; &#125;; if(!doc.addEventListener) return; win.addEventListener(resizeEvt, recalc, false); doc.addEventListener('DOMContentLoaded', recalc, false);&#125;)(document, window); 解析页面链接中的参数值1234567/*页面之间传值-解析*/function getParam(name) &#123; var reg = new RegExp("(^|&amp;)" + name + "=([^&amp;]*)(&amp;|$)", "i"); var r = window.location.search.substr(1).match(reg); if(r != null) return decodeURI(r[2]); return null;&#125; 判断是否为微信浏览器12345678910function isWeiXinClient() &#123; var ua = navigator.userAgent.toLowerCase(); if (ua.match(/MicroMessenger/i)=="micromessenger") &#123; return true; &#125; else &#123; return false; &#125;&#125;// 测试alert(isWeiXinClient()); 15秒倒计时跳转123456789101112131415161718var wait = 15, timer;time($(".myRead"));function time(o) &#123; if(wait == 0) &#123; o.removeAttr("disabled"); o.removeClass("myRead_time") o.html("已阅读并同意"); wait = 15; &#125; else &#123; o.attr("disabled", true); o.html("已阅读并同意(" + wait + "s)"); wait--; timer = setTimeout(function() &#123; time(o) &#125;, 1000) &#125;&#125;]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Qrcode生成二维码]]></title>
    <url>%2F2017%2F12%2F11%2FQrcode%E7%94%9F%E6%88%90%E4%BA%8C%E7%BB%B4%E7%A0%81%2F</url>
    <content type="text"><![CDATA[用于根据某字符串生成二维码 基本使用1234567891、引入jq和jquery.qrcode.min.js即可2、渲染区域元素&lt;div id="qrcodeDiv"&gt;&lt;/div&gt;3、$('#qrcodeDiv').qrcode(&#123; render : 'canvas',//渲染方式table canvas，table方式兼容更好些 width : 200, heigth : 200, text : 'zisefengbao' &#125;)4、这样即可扫描二维码，携带信息zisefengbao 中文字符支持12345678910111213141516171819202122231、默认不支持中文编码，采用charCodeAt（）方式进行编码转换，默认采用UTF-8方式编码。而中文一般采用UTF-16编码实现，会乱码。解决方法是在二维码编码钱转换UTF-82、实现代码：function utf16to8(str) &#123; var out, i, len, c; out = ""; len = str.length; for (i = 0; i &lt; len; i++) &#123; c = str.charCodeAt(i); if ((c &gt;= 0x0001) &amp;&amp; (c &lt;= 0x007F)) &#123; out += str.charAt(i); &#125; else if (c &gt; 0x07FF) &#123; out += String.fromCharCode(0xE0 | ((c &gt;&gt; 12) &amp; 0x0F)); out += String.fromCharCode(0x80 | ((c &gt;&gt; 6) &amp; 0x3F)); out += String.fromCharCode(0x80 | ((c &gt;&gt; 0) &amp; 0x3F)); &#125; else &#123; out += String.fromCharCode(0xC0 | ((c &gt;&gt; 6) &amp; 0x1F)); out += String.fromCharCode(0x80 | ((c &gt;&gt; 0) &amp; 0x3F)); &#125; &#125; return out;&#125;;3、使用方法:utf16to8("张三") 中心区域添加自定义Logo图片 参考网址1234567891、html:&lt;div id='qrcodeDiv'&gt; &lt;div id='codeico'&gt;&lt;/div&gt;&lt;/div&gt;2、css定位#codeico&#123;position:fixed;z-index:99999;width:30px;height:30px;background:url(weizhi.jpg) no-repeat 100%;3、js定位var margin = [$('#qrcodeDiv').height() - $('#codeico').height()] /2;$('#codeico').css('margin',margin); 使用案例：客户端扫描PC端生成的二维码实现登录功能1231、PC端请求接口获得密钥code2、客户端扫码，传给后台code和userId3、长轮询请求接口，传给后台code,用于后台判断密钥是否一致，一致的话登录成功，得到userId 5.http://blog.csdn.net/u011127019/article/details/51226104]]></content>
      <categories>
        <category>常用插件</category>
      </categories>
      <tags>
        <tag>插件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[cookie的使用]]></title>
    <url>%2F2017%2F12%2F11%2Fcookie%E7%9A%84%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[cookie的增删改查 使用场景 保存用户登录状态。例如将用户id存储于一个cookie内，这样当用户下次访问该页面时就不需要重新登录了。 追踪用户行为。例如天气预报网站，系统能够记住上一次访问的地区。 定制页面。如果网站提供了换肤功能，当用户下次访问时，仍然可以保存上一次访问的界面风格。 创建购物车。例如淘宝网就使用cookie记录了用户曾经浏览过的商品，方便随时进行比较。 cookie的设置 设置cookie： 1231、document.cookie = 'userId=121;phone=1311111111';2、document.cookie="str="+escape("I love ajax");(相当于document.cookie="str=I%20love%20ajax";为了避免空格符号等，使用escape()统一编码)3、当使用escape()编码后，在取出值以后需要使用unescape()进行解码才能得到原来的cookie值。 获取cookie值： 121、document.cookie直接获取所有的cookie2、若想获得单个cookie，需要进行字符串和数组的相关操作。 删除cookie： 11、删除cookie，可将其过期时间设定为一个过去的值。 函数 添加cookie：addCookie(name,value,time) 调用方法：addCookie(‘userId’,’121’,5) 12345678910function addCookie(name,value,time)&#123; var str = name+"="+escape(value); if(time&gt;0)&#123;//time为0时不设定过期事件，浏览器关闭时cookie自动消失 var date = new Date(); var ms = time*24*3600*1000; date.setTime(date.getTime()+ms); str += ";expires="+date.toGMTString()+";path=/"; document.cookie = str; &#125;&#125; 获取指定cookie：getCookie(c_name) 调用方法：getCookie(‘userId’) 123456789101112function getCookie(name) &#123; if(document.cookie.length &gt; 0) &#123; c_start = document.cookie.indexOf(name + "=") if(c_start != -1) &#123; c_start = c_start + name.length + 1 c_end = document.cookie.indexOf(";", c_start) if(c_end == -1) c_end = document.cookie.length return unescape(document.cookie.substring(c_start, c_end)) &#125; &#125; return ""&#125; 删除指定cookie：deleteCookie(name) 调用方法：deleteCookie(‘userId’) 1234567function deleteCookie(name) &#123; var exp = new Date(); exp.setTime(exp.getTime() - 1); var cval = getCookie(name); if(cval != null) document.cookie = name + "=" + cval + ";expires=" + exp.toGMTString() + ";path=/";&#125; 检测是否有cookie存在：checkCookie(name) 调用方法：checkCookie(‘userId’) 12345678function checkCookie(name) &#123; var c = document.cookie.indexOf(name); if(c != -1) &#123; return true; &#125; else &#123; return false; &#125;&#125; 更新cookie：updateCookie(name,value,time) 调用方法：updateCookie(‘userId’,’111’,2)12345678function updateCookie(name, value, time) &#123; var str = name + "=" + escape(value); var date = new Date(); var ms = time * 24 * 3600 * 1000; date.setTime(date.getTime() + ms); str += ";expires=" + date.toGMTString() + ";path=/"; document.cookie = str;&#125; 使用案例(记住密码-部分代码)]]></content>
      <categories>
        <category>常用插件</category>
      </categories>
      <tags>
        <tag>插件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[时间日期格式化]]></title>
    <url>%2F2017%2F12%2F10%2F%E6%97%B6%E9%97%B4%E6%97%A5%E6%9C%9F%E6%A0%BC%E5%BC%8F%E5%8C%96%2F</url>
    <content type="text"><![CDATA[将毫秒数格式化为”yyyy-MM-dd hh:mm:ss S” 使用说明：12new Date("毫秒数").Format("yyyy-MM-dd")new Date().Format("yyyy-MM-dd hh:mm:ss S") 方法说明：123456789101112131415Date.prototype.Format = function(fmt) &#123; var o = &#123; "M+": this.getMonth() + 1, //月份 "d+": this.getDate(), //日 "h+": this.getHours(), //小时 "m+": this.getMinutes(), //分 "s+": this.getSeconds(), //秒 "q+": Math.floor((this.getMonth() + 3) / 3), //季度 "S": this.getMilliseconds() //毫秒 &#125;; if(/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length)); for(var k in o) if(new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length))); return fmt;&#125;]]></content>
      <categories>
        <category>常用插件</category>
      </categories>
      <tags>
        <tag>插件</tag>
      </tags>
  </entry>
</search>
